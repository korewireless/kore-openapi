openapi: 3.0.3
info:
  title: KORE - Webhook API
  description: This is the public Webhook API for creating, retrieving and modifying secrets.
  termsOfService: "https://pardot.korewireless.com/koremsa"
  contact: 
    name: KORE Support
    url: https://korewireless.service-now.com/csm
    email: support@korewireless.com
  license: 
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://webhook.api.korewireless.com

tags:
  - name: Webhook
    

paths:

  /v1/secrets:
    post: 
      summary: Create a new secret
      description: Creates a new secret with associated data.
      tags: [Webhook]
      operationId: createSecret
      parameters:
        - name: "Authorization"
          in: "header"
          schema:
            type: "string"
        - name: "Accept"
          in: "header"
          schema:
            type: "string"
        - name: "Content-Type"
          in: "header"
          schema:
            type: "string"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  description: A user-friendly name for the secret.
              required:
                - Name
              example:
               Name: my new secret

      responses:
        "201":
          description: Secret created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretCreated"
        "400":
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "401":
          description: Unauthorized
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "403":
          description: Forbidden
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "405":
          description: Method Not Allowed
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "404":
          description: Not Found
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "500":
          description: Internal Server Error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
      security:
        - Bearer_JWT_token: []
        - OAuth: []

    get:
      summary: Retrieve a list of secrets
      description: Retrieves a list of secrets, optionally filtered by status.
      tags: [Webhook]
      operationId: getSecrets
      parameters:
        - name: status
          in: query
          description: Filter secrets by their status.
          required: false
          schema:
            type: string
            example: active
        - name: page_number
          in: query
          description: Optional Filter that indicates the current pagination index of the response
          required: false
          schema:
            type: integer
            example: 1
        - name: page_size
          in: query
          description: Optional Filter that indicates the total number of records included in the response.
          required: false
          schema:
            type: integer
            example: 10
        - name: "Authorization"
          in: "header"
          schema:
            type: "string"
        - name: "Accept"
          in: "header"
          schema:
            type: "string"
        - name: "Content-Type"
          in: "header"
          schema:
            type: "string"
        - name: "i-kore-auth-account"
          in: "header"
          schema:
            type: "string"    
      responses:
        "200":
          description: A list of secrets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedSecretResponse"
        "400":
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "401":
          description: Unauthorized
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "403":
          description: Forbidden
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "404":
          description: Not Found
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "405":
          description: Method Not Allowed
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "500":
          description: Internal Server Error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
      security:
        - Bearer_JWT_token: []
        - OAuth: []
      
    
  /v1/secrets/{id}:
    patch:
      summary: Modify an existing secret
      description: Updates the details of an existing secret specified by secret`id`.
      tags: [Webhook]
      operationId: modifySecret
      parameters:
        - name: id
          in: path
          required: true
          description: The unique identifier of the secret to be updated.
          schema:
            type: string
        - name: "Authorization"
          in: "header"
          schema:
            type: "string"
        - name: "Accept"
          in: "header"
          schema:
            type: "string"
        - name: "Content-Type"
          in: "header"
          schema:
            type: "string"
  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  description: A user-friendly name for the secret.
                Status:
                  type: string
                  description: The status of the secret.
      responses:
        "200":
          description: Secret updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretResponse"
        "400":
          description: Bad Request
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "401":
          description: Unauthorized
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "403":
          description: Forbidden
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "404":
          description: Not Found
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "405":
          description: Method Not Allowed
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
        "500":
          description: Internal Server Error
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Credentials:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiErrorResponse"
      security:
        - Bearer_JWT_token: []
        - OAuth: []
      

components:
  schemas:
    SecretCreated:
      type: object
      properties:
        id:
          type: string
          description: the id of the secret created
          nullable: false
          minLength: 30
          maxLength: 30
          example: whs_01jf8c4889ehtbzt0n9mzk1prc
        name:
          type: string
          description: friendly name of the secret
          nullable: false
          example: my new secret
        secret:
          type: string
        status:
          type: string
          example: pending
        last_modified:
          type: string
          format: date-time
      required:
        - id
        - name
        - secret
        - status
        - last_modified          
    SecretResponse:
      type: object
      properties:
        id:
          type: string
          description: the id of the secret created
          nullable: false
          minLength: 30
          maxLength: 30
          example: whs_01jf8c4889ehtbzt0n9mzk1prc
        name:
          type: string
          description: friendly name of the secret
          nullable: false
          example: my new secret
        status:
          type: string
          example: active
          enum:
           - active
           - Pending
        last_modified:
          type: string
          format: date-time
      required:
        - id
        - name
        - status
        - last_modified
    PaginatedSecretResponse:
      type: object
      properties:
        data:
          type: array
          items: 
            type: object
            properties:
                id:
                  type: string
                  description: the id of the secret created
                  nullable: false
                  minLength: 30
                  maxLength: 30
                  example: whs_01jf8c4889ehtbzt0n9mzk1prc
                name:
                  type: string
                  description: friendly name of the secret
                  nullable: false
                  example: my new secret
                status:
                  type: string
                  enum:
                     - active
                     - pending
                last_modified:
                  type: string
                  format: date-time
        meta_data:
          type: object
          properties:
            count:
                type: integer
                example: 1
            page_size:
                type: integer
                example: 10
            page_number:
                type: integer
                example: 1
            previous_page_url:
                type: string  
                example: https://webhook.api.korewireless.com/v1/secrets?page_size=1&page_number=2
            next_page_url:
                type: string
                example: https://webhook.api.korewireless.com/v1/secrets?page_size=1&page_number=4
      required:
        - data
        - meta_data
    ApiErrorResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
          description: HTTP Status Code
          example: 403
        code:
          type: integer
          format: int32
          example: 30010
        message:
          type: string
          description: Error Message
          example: Resource access forbidden
        info:
          type: string
          description: Internal Error Message reference
          example: http//docs.korewireless.com/errors/30010
      required:
        - code
        - status
        - message
  securitySchemes:
    Bearer_JWT_token:
      description: JWT bearer token description...
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth: 
      type: oauth2
      flows:
        clientCredentials: 
          tokenUrl: https://api.korewireless.com/api-services/v1/auth/token
          scopes: {}
     